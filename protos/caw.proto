syntax = "proto3";

option go_package = "github.com/floan/csci499_floan/protos/go_protos/caw";

package caw;

// Time as given by Linux gettimeofday().
message Timestamp {
  int64 seconds = 1;  // Seconds since beginning of UNIX epoch.
  int64 useconds = 2;  // Microseconds since beginning of UNIX epoch.
}

message Caw {
  string username = 1;  // The user who posted this caw.
  string text = 2;  // The contents of the caw.
  bytes id = 3;  // The ID of this caw.
  bytes parent_id = 4;  // The ID, if any, of the caw this is in reply to.
  Timestamp timestamp = 5;  // The time this caw was posted.
}

message RegisteruserRequest {
  string username = 1;
}

message RegisteruserReply {
  // Empty because success/failure is signaled via GRPC status.
}

message CawRequest {
  string username = 1;
  string text = 2;  // The contents of the new caw to be posted.
  bytes parent_id = 3;  // (optional) The ID of the caw this is in response to.
}

message CawReply {
  Caw caw = 1;  // Returns the stored caw.
}

message FollowRequest {
  string username = 1;
  string to_follow = 2;  // The username of the other user to follow.
}

message FollowReply {
  // Empty because success/failure is signaled via GRPC status.
}

message ReadRequest {
  bytes caw_id = 1;  // The ID of the caw to start the read at.
}

message ReadReply {
  repeated Caw caws = 1;  // The requested caw thread.
}

message ProfileRequest {
  string username = 1;
}

message ProfileReply {
  repeated string followers = 1;
  repeated string following = 2;
}

message HashtagRequest {
  string hashtag = 1; // the hashtag string (not including the # sign)
}

message HashtagReply {
  Caw caw = 1; // the caw that was just posted with the hashtag
}

